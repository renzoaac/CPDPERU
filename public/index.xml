<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Site title</title>
    <link>https://example.com/</link>
    <description>Recent content on Site title</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Shortcodes In Action</title>
      <link>https://example.com/blog/2021-02-14-shortcodes-in-action/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/2021-02-14-shortcodes-in-action/</guid>
      <description>&lt;p&gt;The theme&amp;rsquo;s short codes in action. See my shortcode repository at

&lt;a href=&#34;https://github.com/parsiya/Hugo-Shortcodes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/parsiya/Hugo-Shortcodes&lt;/a&gt; for more.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Single Page</title>
      <link>https://example.com/about/</link>
      <pubDate>Sun, 14 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/about/</guid>
      <description>This is a single page. To create a page similar to this:
 Create a new markdown file in contents/page/about.md.  Alternatively, create a page bundle contents/page/about/index.md.   In the frontmatter of the page, set the value of url to your desired relative path.  E.g., for this page we have url = &amp;quot;/about/&amp;quot;.   Now you can access the website at baseurl/about and you can link to it from the main menu or sidebar using the relative path.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://example.com/blog/2020-12-01-hello-r-markdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      
      <guid>https://example.com/blog/2020-12-01-hello-r-markdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://example.com/blog/2014-04-02-hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/2014-04-02-hugo-template-primer/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://example.com/blog/2014-04-02-getting-started-with-hugo/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/2014-04-02-getting-started-with-hugo/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://example.com/blog/2014-03-10-migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://example.com/blog/2014-03-10-migrate-to-hugo-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>
