[["aspectos-básicos.html", "Chapter 2 Aspectos básicos 2.1 Uso del do-file editor 2.2 Uso del comando Help", " Chapter 2 Aspectos básicos All chapters start with a first-level heading followed by your chapter title, like the line above. There should be only one first-level heading (#) per .Rmd file. 2.1 Uso del do-file editor 2.2 Uso del comando Help "],["empezando-a-programar.html", "Chapter 3 Empezando a programar 3.1 Carga y análisis descriptivo de datos 3.2 Tipo de variables y formatos 3.3 Principales comandos", " Chapter 3 Empezando a programar 3.1 Carga y análisis descriptivo de datos En Stata podemos cargar datos internos y externos. Los primeros podemos llamarlos a través del comando help dta_examples. Al ejecutar este comando, veremos que dispondremos de más de 25 conjuntos de datos los cuales podemos llamar usando el comando sysuse. Para los datos externos de formato .dta usaremos el comando use, mientras que para otros formatos como .csv, .xls, .xlsx, .dbf, entre otros; se usará el comando import. 3.1.1 Datos internos Para este ejemplo, usaremos el conjunto de datos interno “auto” seguido de la opción clear ya que nos permite limpiar la memoria de cualquier otro dataset usado previamente. Seguido de ello, usaremos el comando describe para que Stata nos brinde una descripción general de dicho dataset. sysuse auto, clear describe (1978 Automobile Data) Contains data from D:\\OneDrive - Superintendencia Nacional de Servicios de Sane &gt; amiento\\Escritorio\\Stata16\\ado\\base/a/auto.dta obs: 74 1978 Automobile Data vars: 12 13 Apr 2018 17:45 (_dta has notes) ------------------------------------------------------------------------------- storage display value variable name type format label variable label ------------------------------------------------------------------------------- make str18 %-18s Make and Model price int %8.0gc Price mpg int %8.0g Mileage (mpg) rep78 int %8.0g Repair Record 1978 headroom float %6.1f Headroom (in.) trunk int %8.0g Trunk space (cu. ft.) weight int %8.0gc Weight (lbs.) length int %8.0g Length (in.) turn int %8.0g Turn Circle (ft.) displacement int %8.0g Displacement (cu. in.) gear_ratio float %6.2f Gear Ratio foreign byte %8.0g origin Car type ------------------------------------------------------------------------------- Sorted by: foreign Inmediatamente Stata nos informa que la data esta relacionada con datos asociados a automóviles del año 1978, la cual exhibe 74 observaciones con 12 variables que, al hacer una lectura rápida de la columna de etiquetas de la variable (variable label), están vinculadas a las características físicas de los vehículos tales como: el peso (weight) y el largo (length), así como el espacio de la maletera (trunk) y el espacio libre (headroom). Asimismo, existen variables asociadas al precio (price), millas recorridas por galón (mpg), entre otras. Finalmente, es importante resaltar que de las 12 variables, 11 de ellas son de tipo numérico y solo 1 de tipo texto o cadena. Para seguir conociendo este dataset, ahora usaremos el comando summarize con la finalidad de que Stata nos muestre los principales estadísticos descriptivos de la data. summarize (1978 Automobile Data) Variable | Obs Mean Std. Dev. Min Max -------------+--------------------------------------------------------- make | 0 price | 74 6165.257 2949.496 3291 15906 mpg | 74 21.2973 5.785503 12 41 rep78 | 69 3.405797 .9899323 1 5 headroom | 74 2.993243 .8459948 1.5 5 -------------+--------------------------------------------------------- trunk | 74 13.75676 4.277404 5 23 weight | 74 3019.459 777.1936 1760 4840 length | 74 187.9324 22.26634 142 233 turn | 74 39.64865 4.399354 31 51 displacement | 74 197.2973 91.83722 79 425 -------------+--------------------------------------------------------- gear_ratio | 74 3.014865 .4562871 2.19 3.89 foreign | 74 .2972973 .4601885 0 1 La tabla nos muestra estadísticos descriptivos básicos como la media, desviación estándar y los valores mínimos y máximos. Como se observa, estos estadísticos son aplicables solo a variables numéricas, por esa razón el contenido de la tabla para la variable marca (make) esta vacía. Asimismo, podemos utilizar la opción del comando summarize denominado detail para obtener información estadística adicional como la varianza, el sesgo y la kurtosis, así como una serie de percentiles que nos permitirán realizar un análisis descriptivo más detallado. Empleemos este comando con la variable precio (price): summarize price, detail (1978 Automobile Data) Price ------------------------------------------------------------- Percentiles Smallest 1% 3291 3291 5% 3748 3299 10% 3895 3667 Obs 74 25% 4195 3748 Sum of Wgt. 74 50% 5006.5 Mean 6165.257 Largest Std. Dev. 2949.496 75% 6342 13466 90% 11385 13594 Variance 8699526 95% 13466 14500 Skewness 1.653434 99% 15906 15906 Kurtosis 4.819188 Otro comando que usaremos frecuentemente es el comando codebook ya que nos permitirá obtener información complementaria a la antes vista, esta vez sin importar si la variable es número o texto. Utilicemos este comando para la variable de tipo texto llamada marca (make). codebook make (1978 Automobile Data) ------------------------------------------------------------------------------- make Make and Model ------------------------------------------------------------------------------- type: string (str18), but longest is str17 unique values: 74 missing &quot;&quot;: 0/74 examples: &quot;Cad. Deville&quot; &quot;Dodge Magnum&quot; &quot;Merc. XR-7&quot; &quot;Pont. Catalina&quot; warning: variable has embedded blanks Como acabamos de ver, el comando codebook nos muestra información muy importante para cualquier analista de datos, en particular, sobre los valores únicos (unique values) y valores pérdidos (missing values). En este caso, Stata nos señala que la variable marca (make) tiene 74 valores único y 0/74 missings values. Esto último significa que los autos de la muestra los componen 74 autos de marcas diferentes, de los cuales para el 100% de la muestra se encuentra dicha información. 3.1.2 Datos externos Stata puede importar sin ningún problema datos en formato .dta; para cuáles son las posibilidades que tenemos para importar archivos debemos escribir el comando help import. La ventana que muestra el Stata permite observar todos los formatos compatibles a importar, por lo que solo bastaría tener claridad de que tipo de formato queremos importar para acceder a la sintaxis y empezar a cargar nuestros datos. Aquí un ejemplo para importar archivos de formato excel. import excel &quot;ruta del archivo.xlsx&quot;, firstrow sheet(&quot;Sheet1&quot;) clear En el término “ruta del archivo.xlsx” del código debemos ingresar la ruta en la cual tenemos nuestro archivo .xlsx que deseamos importar al Stata. Por su parte, la opción “firstrow” señala al Stata que la primera fila de nuestro archivo excel debe ser considerada como la lista de variables. Finalmente, “sheet()” es una opción para especificar la hoja del libro excel, lo que es sumamente importante cuando manejamos varias hojas dentro de un mismo libro. Una vez importado el archivo, podemos iniciar nuestro análisis descriptivo que vimos en la sección anterior. 3.2 Tipo de variables y formatos Profundicemos un poco sobre las variables y formatos ya que son parte fundamental en la gestión de datos. Afortunadamente, en Stata trabajaremos con solo variables de clase númerica y texto por lo que no será muy complejo abordar esta sección. 3.2.1 Tipos de almacenamiento Las variables numéricas y se almacenará en la memoria a través de diferentes tipologías. Comenzando por las variables numéricas tenemos los siguientes tipos de almacenamiento: byte, int, long, float y double. Cada tipología esta directamente relacionado con su tamaño de almacenamiento en términos de “bytes”. Así, una variable númerica de tipo “byte” tendrá un peso de 1 “bytes” en la memoria, de modo que este tipo de variable estará usualmente asociada con números de hasta 3 caracteres. Al escribir el comando help Data types podemos observar todas las tipologías tanto para las variables numéricas y texto, las cuales siguen la misma lógica del párrafo anterior. 3.3 Principales comandos "]]
